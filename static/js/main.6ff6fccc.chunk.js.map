{"version":3,"sources":["api/newsApi.js","context/context.js","components/News.js","components/NewsList.js","App.js","hook/hooks.js","index.js"],"names":["setArticles","setError","a","fetch","call","json","response","articles","error","msj","newsApi","newsContext","createContext","News","content","handleExit","useContext","useState","newsContent","setNewsContent","useEffect","cleanContent","split","id","onClick","author","href","url","NewsList","tittle","handleContent","title","replace","source","name","description","urlToImage","src","alt","App","setContent","handlers","handleHook","Provider","value","map","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6PAOA,WAAuBA,EAAYC,GAAnC,iBAAAC,EAAA,+EAGuBC,MAAM,2FAH7B,cAGUC,EAHV,gBAI0BA,EAAKC,OAJ/B,OAIUC,EAJV,OAKIN,EAAYM,EAASC,UALzB,kDAQON,EAAS,CACLO,MAAK,KACLC,IAAI,0CAVf,2D,sBAgBeC,M,8CCrBFC,EAAYC,0B,OCCV,SAASC,EAAT,GAA0B,IAAXC,EAAU,EAAVA,QAGnBC,EAAYC,qBAAWL,GAAvBI,WAEP,EAAmCE,mBAAS,IAA5C,mBAAOC,EAAP,KAAmBC,EAAnB,KAWA,OATAC,qBAAU,WACN,GAAGN,EAAQA,QAAQ,CACf,IAAMO,EAAeP,EAAQA,QAAQQ,MAAM,KAAK,GAChDH,EAAeE,MAIrB,CAACP,IAGC,sBAAKS,GAAG,OAAR,UAEI,qBAAKA,GAAG,WAAWC,QAAST,IAE5B,0CAAaD,EAAQW,UACrB,4BAAIP,IACJ,mBAAGQ,KAAMZ,EAAQa,IAAjB,+BCvBG,SAASC,EAAT,GAA6B,IAAVC,EAAS,EAATA,OAEvBC,EAAed,qBAAWL,GAA1BmB,cACDC,EAAMF,EAAOE,MAAMC,QAAQ,KAAKH,EAAOI,OAAOC,KAAK,IAIzD,OACI,sBAAKX,GAAG,gBAAR,UACI,qBAAKA,GAAG,UAAUC,QAAS,kBAAIM,EAAcD,MAE9C,0BAASN,GAAG,iBAAZ,UAEI,6BAAKQ,IAEL,4BAAIF,EAAOM,cAEX,mCAAMN,EAAOI,OAAOC,KAApB,UAKHL,EAAOO,WAAW,qBAAMC,IAAKR,EAAOO,WAAYE,IAAI,KAAU,QCc3DC,MAhCf,WAGE,MAA6BtB,mBAAS,IAAtC,mBAAOV,EAAP,KAAgBP,EAAhB,KACA,EAAuBiB,mBAAS,MAAhC,mBAAOT,EAAP,KAAaP,EAAb,KACA,EAA2BgB,qBAA3B,mBAAOH,EAAP,KAAe0B,EAAf,KAEDpB,qBAAU,WAEPV,EAAQV,EAAYC,KAGnB,IAEH,IAAMwC,EClBgB,SAACD,GAgBnB,MAAM,CACFV,cAbN,SAAuBhB,GAEnB0B,EAAW1B,IAYTC,WAPJ,WACEyB,EAAW,QDMAE,CAAWF,GAE9B,OAGM,sBAAKjB,GAAG,gBAAR,UACGf,EAAM,mBAAGe,GAAG,WAAN,SAAkBf,EAAMC,MAAS,KAExC,eAACE,EAAYgC,SAAb,CAAsBC,MAAOH,EAA7B,UACI,mDACC3B,EAAQ,cAACD,EAAD,CAAMC,QAASA,IAAWP,EAASsC,KAAI,SAAAhB,GAAM,OAAE,cAACD,EAAD,CAA4BC,OAAQA,GAArBA,EAAOF,eEzB1FmB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.6ff6fccc.chunk.js","sourcesContent":["\r\n\r\n\r\n\r\n\r\n\r\n\r\nasync function newsApi(setArticles,setError){\r\n\r\n   try{\r\n    const call = await fetch(\"https://newsapi.org/v2/top-headlines?country=us&apiKey=c4f372dc99f64484b65beec5fd0ed60a\")\r\n    const response= await call.json()\r\n    setArticles(response.articles)\r\n   }\r\n   catch(error){\r\n       setError({\r\n           error,\r\n           msj:\"error en el recurso o de conectividad\"\r\n        })\r\n   }\r\n\r\n}\r\n\r\nexport default newsApi","import {createContext}from 'react'\r\n\r\nexport const newsContext=createContext()\r\n","import React, { useContext, useEffect, useState } from 'react'\r\nimport { newsContext } from '../context/context'\r\n\r\nexport default function News({content}) {\r\n\r\n\r\n    const {handleExit}=useContext(newsContext)\r\n\r\n    const [newsContent,setNewsContent]=useState(\"\")\r\n\r\n    useEffect(()=>{\r\n        if(content.content){\r\n            const cleanContent = content.content.split(\"[\")[0]\r\n            setNewsContent(cleanContent)\r\n            \r\n        }\r\n\r\n    },[content])\r\n\r\n    return (\r\n        <div id=\"news\" >\r\n            \r\n            <div id=\"exitNews\" onClick={handleExit}/>\r\n\r\n            <h3>Author: {content.author}</h3>\r\n            <p>{newsContent}</p>\r\n            <a href={content.url}>Go to the Page</a>\r\n         \r\n           \r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { newsContext } from '../context/context'\r\n\r\nexport default function NewsList({tittle}) {\r\n\r\n    const {handleContent}=useContext(newsContext)\r\n    const title=tittle.title.replace(\"- \"+tittle.source.name,\"\")\r\n    \r\n    \r\n    \r\n    return (\r\n        <div id=\"newsContainer\" >\r\n            <div id=\"SeeNews\" onClick={()=>handleContent(tittle)}/>\r\n\r\n           <article id=\"tittleAndImage\">\r\n\r\n               <h2>{title}</h2>\r\n               \r\n               <p>{tittle.description}</p>\r\n                \r\n               <h3>\"{tittle.source.name}\"</h3>\r\n\r\n\r\n                \r\n           </article>\r\n           {tittle.urlToImage?<img  src={tittle.urlToImage} alt=\"\"></img>:null}\r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\n","import { useState,useEffect} from \"react\";\nimport newsApi from \"./api/newsApi\";\nimport News from \"./components/News\";\nimport NewsList from \"./components/NewsList\";\nimport {newsContext} from \"./context/context\"\nimport {handleHook }from \"./hook/hooks\"\n\nfunction App() {\n\n\n  const [articles,setArticles]=useState([])\n  const [error,setError]=useState(null)\n  const [content,setContent]=useState()\n\n useEffect(() => {\n\n    newsApi(setArticles,setError)\n    \n    \n  }, [])\n  \n  const handlers = handleHook(setContent)\n  \nreturn (\n\n    \n      <div id=\"mainContainer\">\n        {error?<p id=\"errorMsj\">{error.msj}</p>:null}\n\n        <newsContext.Provider value={handlers}>\n            <h1>Rolo News Display</h1>\n            {content?<News content={content}/>:articles.map(tittle=><NewsList key={tittle.url}  tittle={tittle}/>)}\n                    \n        </newsContext.Provider>\n      </div>\n    \n  );\n}\n\nexport default App;\n    \n   \n    \n\n\n\n\n \n\n  \n            \n\n  ","\r\n\r\n\r\nexport const handleHook=(setContent)=> {\r\n\r\n   \r\n\r\n    function handleContent(content){\r\n\r\n        setContent(content)\r\n        \r\n        \r\n      }\r\n    \r\n      function handleExit(){\r\n        setContent(null)\r\n        \r\n      }\r\n\r\n      return{\r\n          handleContent,\r\n          handleExit\r\n          \r\n      }\r\n    \r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}